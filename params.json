{
  "name": "Py register machine",
  "tagline": "a register machine written in c and python3",
  "body": "# PyRegisterMachine\r\na register machine written in c and python3\r\n\r\n## What PyRegisterMachine is about\r\n\r\nThe goal of PyRegisterMachine is it to provide a generic register machine package.   \r\nUsing such a register machine package is not like just emulating a real processor,\r\nit is designed for scientific and educational purposes and comes with features that could\r\nnot provided by such an emulation.\r\n\r\n## Scientific advantages\r\n\r\n* PyRegisterMachine is generic.   \r\n  Using a generic engine allows you to select just the mnemonics you need and/or you want.    \r\n  In Addition to this PyRegisterMachine makes it really easy to add new mnemonics, if you need them.\r\n* PyRegisterMachine has special debug features.   \r\n  PyRegistermachine automatically logs the number of operations and saves the complete call stack.   \r\n  This allows to generate data about algorithm run-times and is suitable to test algorithms.\r\n* PyRegisterMachine allows dumps.   \r\n  Reading the content of your RAM or Flash is important, if your are developing on machine level\r\n  or debugging algorithms.    \r\n  PyRegisterMachine has the mnemonic `fdump` for dumping the flash to a file and a SpecialFunctionRegister command\r\n  to dump the RAM to a file.\r\n* PyRegisterMachine has IORegister s.  \r\n  Those Registers allow the register machine to\r\n  * Communicate with the environment\r\n  \r\n  And allows an user to\r\n  * Implement Virtual Discs\r\n  * Implement Internet Access\r\n* PyRegisterMachine supports interrupts.   \r\n  Interrupts are essential for the development of Operating Systems.   \r\n  Including the other features of the engine, PyRegisterMachine is perfect\r\n  for developing Operating Systems, as scientific or educational project.\r\n* KASM the Assembly Language for PyRegisterMachine is easy to learn and easy to process.   \r\n  This allows\r\n  * New users to jump quickly into programming whith KASM\r\n  * Developing new assemblers easily\r\n  * Developing High-Level languages based on KASM \r\n\r\n\r\n\r\n_Daniel Knuettel_\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}